---
import { ThemeAwareBubbleBackground } from "@/components/ThemeAwareBubbleBackground";
import BaseHead from "../components/BaseHead.astro";
import { AppCommand } from "@/components/AppCommand";
import { Toaster } from "@/components/ui/sonner";
import { getCollection } from "astro:content";

type Props = {
  title?: string;
  description?: string;
  showBackground?: boolean;
  image?: ImageMetadata;
};

const { title, description, showBackground = true, image } = Astro.props;

const posts = (await getCollection("articles")).filter(
  (post) => post.data.published
);
---

<script is:inline>
  const getThemePreference = () => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    return window.matchMedia("(prefers-color-scheme: dark)").matches
      ? "dark"
      : "light";
  };
  const isDark = getThemePreference() === "dark";
  document.documentElement.classList[isDark ? "add" : "remove"]("dark");

  if (typeof localStorage !== "undefined") {
    const observer = new MutationObserver(() => {
      const isDark = document.documentElement.classList.contains("dark");
      localStorage.setItem("theme", isDark ? "dark" : "light");
    });
    observer.observe(document.documentElement, {
      attributes: true,
      attributeFilter: ["class"],
    });
  }
</script>

<html lang="en">
  <head>
    <BaseHead title={title} description={description} image={image} />
  </head>

  <body>
    <main
      class="bg-gradient-to-b to-gray-200 from-white dark:to-[#313131] dark:from-[#000000]"
    >
      <!-- {showBackground && <ThemeAwareBubbleBackground client:only />} -->
      <slot />
      <AppCommand posts={posts} client:only />
    </main>
  </body><Toaster client:only />
</html>
